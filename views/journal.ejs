<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Trading Journal</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #0f0f0f;
            color: #e0e0e0;
            min-height: 100vh;
        }

        /* Header */
        .header {
            background: #1a1a1a;
            border-bottom: 1px solid #2a2a2a;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header h1 {
            color: #fff;
            font-size: 24px;
            font-weight: 600;
        }

        .header-right {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .user-info {
            color: #888;
            font-size: 14px;
        }

        .logout-btn {
            background: #2a2a2a;
            color: #e0e0e0;
            padding: 8px 16px;
            border: 1px solid #333;
            border-radius: 5px;
            text-decoration: none;
            font-size: 14px;
            transition: all 0.3s;
        }

        .logout-btn:hover {
            background: #333;
            border-color: #444;
        }

        /* Container */
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 30px;
        }

        /* Stats Cards */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: #1a1a1a;
            border: 1px solid #2a2a2a;
            border-radius: 10px;
            padding: 25px;
            transition: transform 0.3s;
        }

        .stat-card:hover {
            transform: translateY(-2px);
            border-color: #4a9eff;
        }

        .stat-label {
            color: #888;
            font-size: 13px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
        }

        .stat-value {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .stat-value.profit {
            color: #4caf50;
        }

        .stat-value.loss {
            color: #f44336;
        }

        .stat-value.neutral {
            color: #4a9eff;
        }

        /* Chart Container */
        .chart-container {
            background: #1a1a1a;
            border: 1px solid #2a2a2a;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 30px;
        }

        .chart-container h2 {
            color: #fff;
            font-size: 18px;
            margin-bottom: 20px;
        }

        /* Actions */
        .actions {
            margin-bottom: 25px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .actions h2 {
            color: #fff;
            font-size: 20px;
        }

        .btn-add {
            background: #4a9eff;
            color: white;
            padding: 12px 24px;
            border-radius: 6px;
            text-decoration: none;
            font-weight: 600;
            font-size: 15px;
            transition: all 0.3s;
        }

        .btn-add:hover {
            background: #3a8eef;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(74, 158, 255, 0.3);
        }

        /* Table */
        .table-container {
            background: #1a1a1a;
            border: 1px solid #2a2a2a;
            border-radius: 10px;
            overflow: hidden;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        thead {
            background: #252525;
        }

        th {
            padding: 15px;
            text-align: left;
            color: #b0b0b0;
            font-weight: 600;
            font-size: 13px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 1px solid #2a2a2a;
        }

        td {
            padding: 15px;
            border-bottom: 1px solid #2a2a2a;
            font-size: 14px;
        }

        tr:hover {
            background: #252525;
        }

        .position-long {
            color: #4caf50;
            font-weight: 600;
        }

        .position-short {
            color: #f44336;
            font-weight: 600;
        }

        .profit {
            color: #4caf50;
            font-weight: 600;
        }

        .loss {
            color: #f44336;
            font-weight: 600;
        }

        /* Action Buttons */
        .action-btns {
            display: flex;
            gap: 8px;
        }

        .btn-edit, .btn-delete {
            padding: 6px 12px;
            border-radius: 4px;
            text-decoration: none;
            font-size: 13px;
            font-weight: 500;
            transition: all 0.2s;
        }

        .btn-edit {
            background: #2a2a2a;
            color: #4a9eff;
            border: 1px solid #333;
        }

        .btn-edit:hover {
            background: #333;
            border-color: #4a9eff;
        }

        .btn-delete {
            background: #2d1515;
            color: #ff6b6b;
            border: 1px solid #3d2525;
            cursor: pointer;
        }

        .btn-delete:hover {
            background: #3d2525;
            border-color: #ff6b6b;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-state h3 {
            font-size: 20px;
            margin-bottom: 10px;
            color: #888;
        }

        .empty-state p {
            margin-bottom: 20px;
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px;
            }

            .header {
                padding: 15px 20px;
                flex-direction: column;
                gap: 10px;
            }

            .actions {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }

            table {
                font-size: 12px;
            }

            th, td {
                padding: 10px 8px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <h1>ðŸ“Š Trading Journal</h1>
        <div class="header-right">
            <span class="user-info">Welcome, <strong><%= user.username %></strong></span>
            <a href="/logout" class="logout-btn">Logout</a>
        </div>
    </div>

    <!-- Main Container -->
    <div class="container">
        <!-- Stats Cards -->
        <div class="stats-container">
            <div class="stat-card">
                <div class="stat-label">Total Profit/Loss</div>
                <div class="stat-value <%= parseFloat(stats.totalProfit) > 0 ? 'profit' : (parseFloat(stats.totalProfit) < 0 ? 'loss' : 'neutral') %>">
                    $<%= stats.totalProfit %>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-label">Win Rate</div>
                <div class="stat-value neutral">
                    <%= stats.winRate %>%
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-label">Total Trades</div>
                <div class="stat-value neutral">
                    <%= stats.totalTrades %>
                </div>
            </div>
        </div>

        <!-- Chart -->
        <% if (trades.length > 0) { %>
        <div class="chart-container">
            <h2>Profit/Loss Over Time</h2>
            <canvas id="profitChart"></canvas>
        </div>
        <% } %>

        <!-- Actions -->
        <div class="actions">
            <h2>Your Trades</h2>
            <a href="/trades/add" class="btn-add">+ Add New Trade</a>
        </div>

        <!-- Trades Table -->
        <div class="table-container">
            <% if (trades.length === 0) { %>
                <div class="empty-state">
                    <h3>No trades yet</h3>
                    <p>Start tracking your trading performance by adding your first trade.</p>
                    <a href="/trades/add" class="btn-add">+ Add Your First Trade</a>
                </div>
            <% } else { %>
                <table>
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Pair</th>
                            <th>Position</th>
                            <th>Entry</th>
                            <th>Exit</th>
                            <th>P/L</th>
                            <th>Image</th>
                            <th>Comment</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% trades.forEach(trade => { %>
                            <tr>
                                <td><%= new Date(trade.trade_date).toLocaleDateString() %></td>
                                <td><strong><%= trade.pair %></strong></td>
                                <td class="<%= trade.position.toLowerCase() === 'long' ? 'position-long' : 'position-short' %>">
                                    <%= trade.position.toUpperCase() %>
                                </td>
                                <td>$<%= trade.entry_price || '-' %></td>
                                <td>$<%= trade.exit_price || '-' %></td>
                                <td class="<%= parseFloat(trade.profit_loss) > 0 ? 'profit' : 'loss' %>">
                                    $<%= trade.profit_loss || '0.00' %>
                                </td>
                                <td><%= trade.comment ? trade.comment.substring(0, 50) : '-' %></td>
                                <td>
                                    <div class="action-btns">
                                        <a href="/trades/edit/<%= trade.id %>" class="btn-edit">Edit</a>
                                        <form action="/trades/delete/<%= trade.id %>" method="POST" style="display: inline;">
                                            <button type="submit" class="btn-delete" onclick="return confirm('Are you sure you want to delete this trade?')">Delete</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            <% } %>
        </div>
    </div>

    <!-- Chart.js Script -->
    <% if (trades.length > 0) { %>
    <script>
        const chartData = <%- chartData %>;
        
        const dates = Object.keys(chartData).sort();
        const profits = dates.map(date => chartData[date]);

        // Calculate cumulative profit
        let cumulative = 0;
        const cumulativeProfits = profits.map(profit => {
            cumulative += profit;
            return cumulative;
        });

        const ctx = document.getElementById('profitChart').getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: 'Cumulative P/L',
                    data: cumulativeProfits,
                    borderColor: '#4a9eff',
                    backgroundColor: 'rgba(74, 158, 255, 0.1)',
                    tension: 0.4,
                    fill: true,
                    pointBackgroundColor: '#4a9eff',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2,
                    pointRadius: 4,
                    pointHoverRadius: 6
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        labels: {
                            color: '#b0b0b0'
                        }
                    },
                    tooltip: {
                        backgroundColor: '#1a1a1a',
                        borderColor: '#2a2a2a',
                        borderWidth: 1,
                        titleColor: '#fff',
                        bodyColor: '#e0e0e0',
                        callbacks: {
                            label: function(context) {
                                return 'P/L: $' + context.parsed.y.toFixed(2);
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: '#2a2a2a'
                        },
                        ticks: {
                            color: '#888',
                            callback: function(value) {
                                return '$' + value;
                            }
                        }
                    },
                    x: {
                        grid: {
                            color: '#2a2a2a'
                        },
                        ticks: {
                            color: '#888'
                        }
                    }
                }
            }
        });
    </script>
    <% } %>
</body>
</html>